{"version":3,"sources":["webpack:///./src/paletteWavelength.png","webpack:///./src/paletteRedYellow.png","webpack:///./src/paletteRedGreen.png","webpack:///./src/paletteHue.png","webpack:///./src/paletteFrequency.png","webpack:///./src/paletteBlueYellow.png","webpack:///./src/web-gl.js","webpack:///./src/user-interface.js","webpack:///./src/mandelbrotFragment.glsl","webpack:///./src/mandelbrotVertex.glsl","webpack:///./src/resources.js","webpack:///./src/mandelbrot.js","webpack:///./src/animation.js","webpack:///./src/main.css","webpack:///./src/main.css?e0d3","webpack:///./src/main.js"],"names":["module","exports","__webpack_require__","p","setup","canvas","document","getElementById","canvasId","gl","getContext","ex","initGraphicalLibrary","vs","createShader","VERTEX_SHADER","fs","FRAGMENT_SHADER","program","createProgram","TEXTURE_FILTER","LINEAR","viewport","width","height","clearColor","GL","resizeViewport","compileVertexShader","sourceCode","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","window","console","error","getShaderInfoLog","compileFragmentShader","linkShaders","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","getUniformLocation","uniform","location","Error","setAttribFloatArray","attrib","array","itemSize","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","loadTexture2D","texture","imageBase64","image","Image","src","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","dragStart","x","y","dragOffset","translate","scale","canvasElement","modelComponent","chooseColor","event","resourceName","target","getAttribute","selectionPaletteElement","style","display","selectedPaletteButton","backgroundImage","glColorPalette","mouseWheelHandler","stopPropagation","detail","wheelDelta","increaseScale","decreaseScale","addEventListener","childNodes","forEach","childNode","nodeType","className","increaseIterationButton","increaseIteration","decreaseIterationButton","decreaseIteration","clientX","clientY","moveX","moveY","registerModelComponent","value","update","maxIteration","modelScale","maxIterationElement","innerHTML","Math","floor","scaleElement","round","datas","paletteBlueYellow","paletteFrequency","paletteHue","paletteRedGreen","paletteRedYellow","paletteWavelength","mandelbrotVertex","mandelbrotFragment","webGL","userInterface","that","vertices","Float32Array","textureCoords","aspect","targetScale","colorTexture","name","resource","resources","deleteTexture","createTexture","activeTexture","TEXTURE0","uniform1i","colorPalette","lastDraw","Date","loop","translateX","translateY","aspectScale","minX","maxX","minY","maxY","now","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLE_STRIP","min","max","_resources","callback","running","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","animateCallback","setTimeout","start","animate","stop","escape","push","i","content","options","hmr","transform","insertInto","undefined","locals","_userInterface2","default","_webGl2","model","_mandelbrot2","_animation2","exception","alert","init"],"mappings":"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","file":"main.bundle.js","sourcesContent":["module.exports = __webpack_public_path__ + \"paletteWavelength.png\";","module.exports = __webpack_public_path__ + \"paletteRedYellow.png\";","module.exports = __webpack_public_path__ + \"paletteRedGreen.png\";","module.exports = __webpack_public_path__ + \"paletteHue.png\";","module.exports = __webpack_public_path__ + \"paletteFrequency.png\";","module.exports = __webpack_public_path__ + \"paletteBlueYellow.png\";","function initGraphicalLibrary (canvas) {\r\n  let gl\r\n  try {\r\n    gl = canvas.getContext('webgl')\r\n  } catch (ex) {}\r\n  if (gl === null) {\r\n    try {\r\n      gl = canvas.getContext('experimental-webgl')\r\n    } catch (ex) {}\r\n  }\r\n  return gl\r\n}\r\n\r\nexport default function (setup) {\r\n  const canvas = document.getElementById(setup.canvasId)\r\n  // Graphical Library\r\n  var gl = initGraphicalLibrary(canvas)\r\n  // Vertex Shader\r\n  const vs = gl.createShader(gl.VERTEX_SHADER)\r\n  // Fragment Shader\r\n  const fs = gl.createShader(gl.FRAGMENT_SHADER)\r\n  // OpenGL Program\r\n  const program = gl.createProgram()\r\n  // OpenGL Texture Configuration\r\n  const TEXTURE_FILTER = gl.LINEAR\r\n  const createBuffer = function (array) {\r\n    var buffer = gl.createBuffer()\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW)\r\n    return buffer\r\n  }\r\n  const getAttribLocation = function (attrib) {\r\n    return gl.getAttribLocation(program, attrib)\r\n  }\r\n\r\n  gl.viewport(0, 0, canvas.width, canvas.height)\r\n  gl.clearColor(0, 0, 0, 1)\r\n\r\n  return {\r\n    GL: gl,\r\n    canvas: {\r\n      width: canvas.width,\r\n      height: canvas.height\r\n    },\r\n    resizeViewport: function () {\r\n      gl.viewport(0, 0, canvas.width, canvas.height)\r\n    },\r\n    compileVertexShader: function (sourceCode) {\r\n      gl.shaderSource(vs, sourceCode)\r\n      gl.compileShader(vs)\r\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\r\n        window.console.error(gl.getShaderInfoLog(vs))\r\n      }\r\n    },\r\n    compileFragmentShader: function (sourceCode) {\r\n      gl.shaderSource(fs, sourceCode)\r\n      gl.compileShader(fs)\r\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\r\n        window.console.error(gl.getShaderInfoLog(fs))\r\n      }\r\n    },\r\n    linkShaders: function () {\r\n      gl.attachShader(program, vs)\r\n      gl.attachShader(program, fs)\r\n      gl.linkProgram(program)\r\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        window.console.error(gl.getProgramInfoLog(program))\r\n      } else {\r\n        gl.useProgram(program)\r\n      }\r\n    },\r\n    getUniformLocation: function (uniform) {\r\n      var location = gl.getUniformLocation(program, uniform)\r\n      if (location && location !== -1) {\r\n        return location\r\n      } else {\r\n        throw new Error(`UniformLocation of ${uniform} not found`)\r\n      }\r\n    },\r\n    setAttribFloatArray: function (attrib, array, itemSize) {\r\n      createBuffer(array)\r\n      var location = getAttribLocation(attrib)\r\n      if (location !== -1) {\r\n        gl.enableVertexAttribArray(location)\r\n        gl.vertexAttribPointer(location, itemSize, gl.FLOAT, false, 0, 0)\r\n      } else {\r\n        throw new Error(`AttribLocation of ${attrib} not found`)\r\n      }\r\n    },\r\n    loadTexture2D: function (texture, imageBase64) {\r\n      const image = new Image()\r\n      image.src = imageBase64\r\n      gl.bindTexture(gl.TEXTURE_2D, texture)\r\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true)\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image)\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, TEXTURE_FILTER)\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, TEXTURE_FILTER)\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT)\r\n    }\r\n  }\r\n}\r\n","\r\nconst maxIterationElement = document.getElementById('maxIteration')\r\nconst scaleElement = document.getElementById('scale')\r\nconst increaseIterationButton = document.getElementById('increaseIteration')\r\nconst decreaseIterationButton = document.getElementById('decreaseIteration')\r\nconst selectedPaletteButton = document.getElementById('selectedPalette')\r\nconst selectionPaletteElement = document.getElementById('selectionPalette')\r\n\r\nexport default function (setup) {\r\n  var dragStart = {x: null, y: null}\r\n  var dragOffset = {x: 0, y: 0}\r\n  var translate = {x: 0, y: 0}\r\n  var scale = 0.1\r\n  var canvasElement = document.getElementById(setup.canvasId)\r\n  var modelComponent = null\r\n  const chooseColor = function (event) {\r\n    const resourceName = event.target.getAttribute('id')\r\n    selectionPaletteElement.style.display = 'none'\r\n    selectedPaletteButton.style.backgroundImage = event.target.style.backgroundImage\r\n    if (modelComponent !== null) {\r\n      modelComponent.glColorPalette(resourceName)\r\n    }\r\n  }\r\n  const mouseWheelHandler = function (event) {\r\n    var wheel\r\n    event.stopPropagation()\r\n    // event.preventDefault();\r\n    if (modelComponent !== null) {\r\n      wheel = event.detail ? -1 * event.detail : event.wheelDelta / 40\r\n      if (wheel > 0) {\r\n        modelComponent.increaseScale()\r\n      } else {\r\n        modelComponent.decreaseScale()\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  // Color palette selection initialisation\r\n  selectionPaletteElement.style.display = 'none'\r\n  // Color palette selection event handlers\r\n  selectedPaletteButton.addEventListener('click', function () {\r\n    if (selectionPaletteElement.style.display === 'none') {\r\n      selectionPaletteElement.style.display = ''\r\n    } else {\r\n      selectionPaletteElement.style.display = 'none'\r\n    }\r\n  })\r\n  selectionPaletteElement.childNodes.forEach(childNode => {\r\n    if (childNode.nodeType === 1 && childNode.className === 'colorPalette') {\r\n      childNode.addEventListener('click', chooseColor)\r\n    }\r\n  })\r\n  // Increase/decrease maximum iteration event handlers\r\n  increaseIterationButton.addEventListener('click', function () {\r\n    if (modelComponent !== null) {\r\n      modelComponent.increaseIteration()\r\n    }\r\n  })\r\n  decreaseIterationButton.addEventListener('click', function () {\r\n    if (modelComponent !== null) {\r\n      modelComponent.decreaseIteration()\r\n    }\r\n  })\r\n  // Mouse events handlers\r\n  canvasElement.addEventListener('DOMMouseScroll', mouseWheelHandler)\r\n  canvasElement.addEventListener('mousewheel', mouseWheelHandler)\r\n\r\n  canvasElement.addEventListener('mousedown', function (event) {\r\n    event.stopPropagation()\r\n    dragStart.x = event.clientX\r\n    dragStart.y = event.clientY\r\n    dragOffset.x = 0.0\r\n    dragOffset.y = 0.0\r\n  })\r\n  canvasElement.addEventListener('mouseup', function (event) {\r\n    event.stopPropagation()\r\n    dragStart.x = null\r\n    dragStart.y = null\r\n    translate.x += dragOffset.x\r\n    translate.y += dragOffset.y\r\n    dragOffset.x = 0\r\n    dragOffset.y = 0\r\n  })\r\n  canvasElement.addEventListener('mousemove', function (event) {\r\n    var moveX, moveY\r\n    event.stopPropagation()\r\n    if (dragStart.x !== null) {\r\n      moveX = dragStart.x - event.clientX\r\n      moveY = dragStart.y - event.clientY\r\n      dragOffset.x = (2 / scale) * (moveX / canvasElement.width)\r\n      dragOffset.y = (-2 / scale) * (moveY / canvasElement.height)\r\n    }\r\n  })\r\n  return {\r\n    registerModelComponent: function (value) {\r\n      modelComponent = value\r\n    },\r\n    update: function (maxIteration, modelScale) {\r\n      scale = modelScale\r\n      maxIterationElement.innerHTML = Math.floor(maxIteration)\r\n      scaleElement.innerHTML = scale >= 10 ? Math.floor(scale) : Math.round(scale * 100) / 100\r\n    },\r\n    dragOffset: dragOffset,\r\n    translate: translate\r\n  }\r\n}\r\n","module.exports = \"#ifdef GL_ES\\r\\nprecision highp float;\\r\\n#endif\\r\\n\\r\\nuniform int maxIteration;\\r\\nuniform sampler2D colorPalette;\\r\\n\\r\\nvarying vec2 v_TextureCoord;\\r\\n\\r\\nconst int loopLimit = 1024;\\r\\n\\r\\nvoid main() {\\r\\n\\tvec2 c = v_TextureCoord;\\r\\n\\tvec2 z = v_TextureCoord;\\r\\n\\tint iteration = 0;\\r\\n\\tfor(int i = 0; i < loopLimit; i++) {\\r\\n\\t\\tfloat x = (z.x * z.x - z.y * z.y) + c.x;\\r\\n\\t\\tfloat y = (z.y * z.x + z.x * z.y) + c.y;\\r\\n\\t\\tif((x * x + y * y) > 4.0 || iteration == maxIteration) break;\\r\\n\\t\\tz.x = x;\\r\\n\\t\\tz.y = y;\\r\\n\\t\\titeration++;\\r\\n\\t}\\r\\n\\tgl_FragColor = (iteration == maxIteration ? vec4(0.0, 0.0, 0.0, 1.0) : texture2D(colorPalette, vec2(float(iteration)) / float(maxIteration), 0.0));\\r\\n}\\r\\n\"","module.exports = \"#ifdef GL_ES\\r\\nprecision highp float;\\r\\n#endif\\r\\n\\r\\nattribute vec2 aVertexPosition;\\r\\nattribute vec2 aTexturePosition;\\r\\n\\r\\nvarying vec2 v_TextureCoord;\\r\\n\\r\\nvoid main() {\\r\\n\\tv_TextureCoord = aTexturePosition;\\r\\n\\tgl_Position = vec4(aVertexPosition, 0.0, 1.0);\\r\\n}\\r\\n\"","\r\nimport { default as paletteBlueYellow } from './paletteBlueYellow.png'\r\nimport { default as paletteFrequency } from './paletteFrequency.png'\r\nimport { default as paletteHue } from './paletteHue.png'\r\nimport { default as paletteRedGreen } from './paletteRedGreen.png'\r\nimport { default as paletteRedYellow } from './paletteRedYellow.png'\r\nimport { default as paletteWavelength } from './paletteWavelength.png'\r\nimport { default as mandelbrotVertex } from './mandelbrotVertex.glsl'\r\nimport { default as mandelbrotFragment } from './mandelbrotFragment.glsl'\r\n\r\nconst datas = {\r\n  'paletteBlueYellow': paletteBlueYellow,\r\n  'paletteFrequency': paletteFrequency,\r\n  'paletteHue': paletteHue,\r\n  'paletteRedGreen': paletteRedGreen,\r\n  'paletteRedYellow': paletteRedYellow,\r\n  'paletteWavelength': paletteWavelength,\r\n  'mandelbrotVertex': mandelbrotVertex,\r\n  'mandelbrotFragment': mandelbrotFragment\r\n}\r\n\r\nexport default datas\r\n","import { default as resources } from './resources'\r\n\r\n/* global window, document, Float32Array */\r\n\r\nexport default function (webGL, userInterface) {\r\n  var vertices = new Float32Array([\r\n    1, 1,\r\n    -1, 1,\r\n    1, -1,\r\n    -1, -1\r\n  ])\r\n  var textureCoords = new Float32Array([\r\n    2.0, 2.0,\r\n    -2.0, 2.0,\r\n    2.0, -2.0,\r\n    -2.0, -2.0\r\n  ])\r\n  var gl = webGL.GL\r\n  var aspect = webGL.canvas.width / webGL.canvas.height\r\n  var scale = 0.1\r\n  var targetScale = 1\r\n  var maxIteration = 64\r\n  var colorTexture = null\r\n  var uniform = {}\r\n  const glColorPalette = function (name) {\r\n    var resource = resources[name]\r\n    if (resource) {\r\n      if (colorTexture !== null) {\r\n        gl.deleteTexture(colorTexture)\r\n      }\r\n      // Load an image to use. Returns a WebGLTexture object\r\n      colorTexture = gl.createTexture()\r\n      webGL.loadTexture2D(colorTexture, resource)\r\n\r\n      gl.activeTexture(gl.TEXTURE0)\r\n      gl.bindTexture(gl.TEXTURE_2D, colorTexture)\r\n      gl.uniform1i(uniform.colorPalette, 0)\r\n    }\r\n  }\r\n  const draw = function () {\r\n    var translateX = 2 * (userInterface.translate.x + userInterface.dragOffset.x)\r\n    var translateY = 2 * (userInterface.translate.y + userInterface.dragOffset.y)\r\n    var aspectScale = scale * aspect\r\n    var minX = (translateX * scale - 2.0) / scale\r\n    var maxX = (translateX * scale + 2.0) / scale\r\n    var minY = (translateY * scale - 2.0) / aspectScale\r\n    var maxY = (translateY * scale + 2.0) / aspectScale\r\n    textureCoords = new Float32Array([\r\n      maxX, maxY,\r\n      minX, maxY,\r\n      maxX, minY,\r\n      minX, minY\r\n    ])\r\n    webGL.setAttribFloatArray('aTexturePosition', textureCoords, 2)\r\n    gl.uniform1i(uniform.maxIteration, maxIteration)\r\n    gl.clear(gl.COLOR_BUFFER_BIT)\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\r\n  }\r\n  const animate = function () {\r\n    scale += (targetScale - scale) / 2\r\n    userInterface.update(maxIteration, scale)\r\n  }\r\n  var lastDraw = new Date()\r\n  var that\r\n\r\n  webGL.compileVertexShader(resources['mandelbrotVertex'])\r\n  webGL.compileFragmentShader(resources['mandelbrotFragment'])\r\n  webGL.linkShaders()\r\n  uniform = {\r\n    colorPalette: webGL.getUniformLocation('colorPalette'),\r\n    maxIteration: webGL.getUniformLocation('maxIteration')\r\n  }\r\n  webGL.setAttribFloatArray('aVertexPosition', vertices, 2)\r\n  glColorPalette('paletteRedYellow')\r\n  that = {\r\n    loop: function () {\r\n      var now = new Date()\r\n      while (now - lastDraw > 16) {\r\n        animate()\r\n        lastDraw += 16\r\n      }\r\n      lastDraw = now\r\n      draw()\r\n    },\r\n    increaseIteration: function () {\r\n      maxIteration += maxIteration * 0.1\r\n      maxIteration = Math.min(maxIteration, 1024)\r\n    },\r\n    decreaseIteration: function () {\r\n      maxIteration -= maxIteration * 0.1\r\n      maxIteration = Math.max(maxIteration, 64)\r\n    },\r\n    increaseScale: function () {\r\n      targetScale += targetScale * 0.1\r\n      targetScale = Math.min(targetScale, 65535 * 2)\r\n    },\r\n    decreaseScale: function () {\r\n      targetScale -= targetScale * 0.1\r\n      targetScale = Math.max(targetScale, 0.5)\r\n    },\r\n    glColorPalette: glColorPalette\r\n  }\r\n  userInterface.registerModelComponent(that)\r\n  return that\r\n}\r\n","/**\r\n * Canvas animator, or 'the main loop',\r\n * call the parameter method callback at 60fps.\r\n *\r\n * @param {Function} callback - Update method.\r\n */\r\nexport default function (callback) {\r\n  var running = true\r\n  /**\r\n   * 60fps timer, using the browser capability if available\r\n   * Source: http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n   */\r\n  const requestAnimationFrame = (function () {\r\n    // shim layer with setTimeout fallback\r\n    if (!window.requestAnimationFrame) {\r\n      if (window.webkitRequestAnimationFrame) {\r\n        return window.webkitRequestAnimationFrame\r\n      } else if (window.mozRequestAnimationFrame) {\r\n        return window.mozRequestAnimationFrame\r\n      } else if (window.oRequestAnimationFrame) {\r\n        return window.oRequestAnimationFrame\r\n      } else if (window.msRequestAnimationFrame) {\r\n        return window.msRequestAnimationFrame\r\n      } else {\r\n        return function (animateCallback) {\r\n          window.setTimeout(animateCallback, 1000 / 60)\r\n        }\r\n      }\r\n    } else {\r\n      return window.requestAnimationFrame\r\n    }\r\n  }())\r\n  /**\r\n   * The loop itself, running if used to stop\r\n   * or continue the animation.\r\n   */\r\n  const animate = function () {\r\n    if (running) {\r\n      callback()\r\n      requestAnimationFrame(animate)\r\n    }\r\n  }\r\n  return {\r\n    /**\r\n     * Initialize and start the animator.\r\n     */\r\n    start: function () {\r\n      running = true\r\n      animate()\r\n    },\r\n    /**\r\n     * Stop the animator and return the average\r\n     * fps of the last execution.\r\n     *\r\n     * @returns {string} - Last execution's fps.\r\n     */\r\n    stop: function () {\r\n      running = false\r\n    }\r\n  }\r\n}\r\n","var escape = require(\"../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#viewport {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n#controls {\\r\\n    position: absolute;\\r\\n    top: 15px;\\r\\n    left: 15px;\\r\\n    background-color: rgba(0, 0, 0, 0.5);\\r\\n    padding: 10px;\\r\\n    border: solid 1px white;\\r\\n}\\r\\n\\r\\ndiv.colorPalette {\\r\\n    width: 256px;\\r\\n    height: 16px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ndiv#selectionPalette {\\r\\n    position: absolute;\\r\\n}\\r\\ndiv.colorPalette#paletteBlueYellow {\\r\\n    background-image: url(\" + escape(require(\"./paletteBlueYellow.png\")) + \");\\r\\n}\\r\\ndiv.colorPalette#paletteFrequency {\\r\\n    background-image: url(\" + escape(require(\"./paletteFrequency.png\")) + \");\\r\\n}\\r\\ndiv.colorPalette#paletteHue {\\r\\n    background-image: url(\" + escape(require(\"./paletteHue.png\")) + \");\\r\\n}\\r\\ndiv.colorPalette#paletteRedGreen {\\r\\n    background-image: url(\" + escape(require(\"./paletteRedGreen.png\")) + \");\\r\\n}\\r\\ndiv.colorPalette#paletteRedYellow {\\r\\n    background-image: url(\" + escape(require(\"./paletteRedYellow.png\")) + \");\\r\\n}\\r\\ndiv.colorPalette#paletteWavelength {\\r\\n    background-image: url(\" + escape(require(\"./paletteWavelength.png\")) + \");\\r\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./main.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import 'normalize-css'\r\nimport './main.css'\r\nimport { default as Animation } from './animation'\r\nimport { default as Mandelbrot } from './mandelbrot'\r\nimport { default as UserInterface } from './user-interface'\r\nimport { default as WebGL } from './web-gl'\r\n\r\n/* global window, document, Float32Array */\r\nfunction init (setup) {\r\n  try {\r\n    var userInterface = UserInterface(setup)\r\n    var webGL = WebGL(setup)\r\n    var model = Mandelbrot(webGL, userInterface)\r\n    var animation = Animation(model.loop)\r\n    animation.start()\r\n  } catch (exception) {\r\n    if (window.console) {\r\n      window.console.error(exception)\r\n    }\r\n    window.alert('Your browser doesn\\'t support WebGL.')\r\n  }\r\n}\r\n\r\ninit({canvasId: 'mycanvas'})\r\n"],"sourceRoot":""}